bool fillInstancesHelper(vector<int>&res, int curr, int n) {
	if(curr == 0) return true;
	for(int i=0;i<2*n-(curr+1);i++) {
		if(res[i]==0 and res[i + curr + 1] == 0) {
			res[i] = res[i+curr+1] = curr;
			if(fillInstancesHelper(res,curr-1,n)) return true;
			res[i] = res[i+curr+1] = 0;
		}
	}
	return false;
}

void fillInstances(int n) {
	vector<int>res(2*n,0);
	if(fillInstancesHelper(res,n,n)) {
		for(auto &it:res) cout<<it<<" ";
		cout<<"\n";
	} else cout<<"NO SOLUTION\n";
}
